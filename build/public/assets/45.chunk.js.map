{"version":3,"file":"45.chunk.js","sources":["webpack:///src/pages/ui-elements/alerts/Alerts.js"],"sourcesContent":["import React, { Component } from 'react';\nimport cx from 'classnames';\nimport {\n  Row,\n  Col,\n  Breadcrumb,\n  BreadcrumbItem,\n  Alert,\n} from 'reactstrap';\n\nimport Widget from '../../../components/Widget';\n\nclass Alerts extends Component {\n  state = {\n    alerts: [{\n      id: 'al-1',\n      type: 'success',\n      msg: '<span class=\"fw-semi-bold\">Success:</span> You successfully read this important alert message.',\n      visible: [true, true, true],\n    }, {\n      id: 'al-2',\n      type: 'info',\n      msg: '<span class=\"fw-semi-bold\">Info:</span> This alert needs your attention, but it\\'s not super important.',\n      visible: [true, true, true],\n    }, {\n      id: 'al-3',\n      type: 'warning',\n      msg: '<span class=\"fw-semi-bold\"><strong>Warning:</strong></span> Best check yo self, you\\'re not looking too good.',\n      visible: [true, true, true],\n    }, {\n      id: 'al-4',\n      type: 'danger',\n      msg: '<span class=\"fw-semi-bold\">Danger:</span> Change this and that and try again. <a class=\"btn btn-default btn-xs float-right mr\" href=\"#\">Ignore</a> <a class=\"btn btn-danger btn-xs float-right mr-xs\" href=\"#\">Take this action</a>',\n      visible: [true, true, true],\n    }],\n  }\n\n  closeAlert(index, alertGroup) {\n    const newAlerts = [...this.state.alerts];\n    newAlerts[index].visible[alertGroup] = false;\n\n    this.setState({ alerts: newAlerts });\n  }\n\n  render() {\n    const { alerts } = this.state;\n\n    return (\n      <div>\n        <Breadcrumb>\n          <BreadcrumbItem>YOU ARE HERE</BreadcrumbItem>\n          <BreadcrumbItem active>UI Alerts</BreadcrumbItem>\n        </Breadcrumb>\n        <h1 className=\"page-title\">Alerts</h1>\n        <Row>\n          <Col xs={12} md={8}>\n            <Widget\n              title={<h5>Alert <span className=\"fw-semi-bold\">Messages</span></h5>}\n              close collapse\n            >\n              <p>Alerts are available for any length of text, as well as an optional dismiss button.</p>\n              {alerts.map((alert, index) => <Alert\n                key={alert.id} isOpen={alert.visible[0]} toggle={() => this.closeAlert(index, 0)}\n                color={alert.type}\n              >\n                <span dangerouslySetInnerHTML={{ __html: alert.msg }} />\n              </Alert>)}\n            </Widget>\n          </Col>\n          <Col xs={12} md={8}>\n            <Widget\n              title={<h5>Transparent <span className=\"fw-semi-bold\">Alerts</span></h5>}\n              close collapse\n            >\n              <p>Transparent  alerts are available by adding <code>.alert-transparent</code> class.</p>\n              {alerts.map((alert, index) => <Alert\n                className=\"alert-transparent\"\n                key={alert.id} isOpen={alert.visible[1]} toggle={() => this.closeAlert(index, 1)}\n                color={alert.type}\n              >\n                <span dangerouslySetInnerHTML={{ __html: alert.msg }} />\n              </Alert>)}\n            </Widget>\n          </Col>\n          <Col xs={12} md={8}>\n            <Widget\n              title={<h5>Rounded <span className=\"fw-semi-bold\">Alerts</span></h5>}\n              close collapse\n            >\n              <p>Rounded alerts are available by adding <code>.alert-rounded</code> class.</p>\n              {alerts.map((alert, index) => <Alert\n                className={cx('alert-rounded', { 'alert-transparent': index % 2 !== 1 })}\n                key={alert.id} isOpen={alert.visible[2]} toggle={() => this.closeAlert(index, 2)}\n                color={alert.type}\n              >\n                <span dangerouslySetInnerHTML={{ __html: alert.msg }} />\n              </Alert>)}\n            </Widget>\n          </Col>\n          <Col xs={12} md={8}>\n            <Widget\n              title={<h5>Additional <span className=\"fw-semi-bold\">Content</span></h5>}\n              close collapse\n            >\n              <p>Alerts can also contain additional HTML elements like headings, paragraphs and dividers.</p>\n              <Alert color=\"success\">\n                <h4 className=\"alert-heading\">Well done!</h4>\n                <p>\n                  Aww yeah, you successfully read this important alert message. This example text is going\n                  to run a bit longer so that you can see how spacing within an alert works with this kind\n                  of content.\n                </p>\n                <hr />\n                <p className=\"mb-0\">\n                  Whenever you need to, be sure to use margin utilities to keep things nice and tidy.\n                </p>\n              </Alert>\n              <Alert color=\"danger\">\n                <h4 className=\"alert-heading\">Well done!</h4>\n                <p>\n                  Aww yeah, you successfully read this important alert message. This example text is going\n                  to run a bit longer so that you can see how spacing within an alert works with this kind\n                  of content.\n                </p>\n              </Alert>\n            </Widget>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\nexport default Alerts;\n\n\n\n// WEBPACK FOOTER //\n// src/pages/ui-elements/alerts/Alerts.js"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAOA;AACA;AACA;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AAJA;AAhBA;;;;;AAwcA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AALA;AAAA;AALA;AADA;AAeA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AALA;AAAA;AALA;AADA;AAejBA;AADA;AA7CA;AANA;AAkFA;;;;AAtHA;AACA;AAwHA;;;;A","sourceRoot":""}